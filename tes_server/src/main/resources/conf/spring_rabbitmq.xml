<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/integration
        http://www.springframework.org/schema/integration/spring-integration.xsd
        http://www.springframework.org/schema/integration/amqp
        http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
        http://www.springframework.org/schema/integration/stream
        http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
        http://www.springframework.org/schema/rabbit
        http://www.springframework.org/schema/rabbit/spring-rabbit-1.5.xsd
        http://www.springframework.org/schema/websocket
        http://www.springframework.org/schema/websocket/spring-websocket.xsd">
	<!-- 创建连接类 -->
	<rabbit:connection-factory
	    id="connectionFactory"
	    host="${rmq.ip}"
	    username="${rmq.manager.user}"
	    password="${rmq.manager.password}"
	    port="${rmq.port}"/>
	<!-- rabbitmqTemplate 通过此模板类中的模板api操作队列的消息 -->
	<rabbit:template id="amqpTemplate"
	                 connection-factory="connectionFactory"
	                 exchange="amqpExchange"></rabbit:template>
	<!-- 指定连接账号的类型 -->
	<rabbit:admin connection-factory="connectionFactory"/>
	<!-- 创建队列
	 durable:是否持久化
	 exclusive:仅创建者使用的的私有队列
	 auto-delete:当所有消费客户端断开后,是否自动删除队列
	 -->
	<rabbit:queue name="videoCacheQueue"
	        durable="true"
	        exclusive="false"
	        auto-delete="false"/>
	<rabbit:queue name="videoSendCCQueue"
	        durable="true"
	        exclusive="false"
	        auto-delete="false"/>
	<!-- 创建交换机对象,并跟绑定指定的队列 -->
	<rabbit:direct-exchange name="amqpExchange" durable="true">
		<rabbit:bindings>
			<rabbit:binding queue="videoCacheQueue" key="videoCacheQueue"></rabbit:binding>
			<rabbit:binding queue="videoSendCCQueue" key="videoSendCCQueue"></rabbit:binding>
		</rabbit:bindings>
	</rabbit:direct-exchange>
	<!-- 创建消息队列的监听,消费消息 -->
	<rabbit:listener-container connection-factory="connectionFactory">
		<rabbit:listener ref="videoCache" method="videoCacheListen" queue-names="videoCacheQueue" />
		<rabbit:listener ref="videoSendCC" method="videoSendCCListen" queue-names="videoSendCCQueue" />
	</rabbit:listener-container>
	<!-- 创建消费消息的类 -->
	<bean id="videoCache" class="com.tarena.mq.listen.VideoCache"></bean>
	<bean id="videoSendCC" class="com.tarena.mq.listen.VideoSendCC"></bean>
</beans>